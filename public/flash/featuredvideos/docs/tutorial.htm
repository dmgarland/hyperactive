<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="de">
<head>
<title>AnimationPackage</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link href="ap_style.css" rel="stylesheet" type="text/css"/>
<script type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>
</head>
<body>
<div id="logo">
	<p><a href="http://www.alex-uhlmann.de/flash/animationpackage/"><img src="images/logo_ap_framed.gif" alt="AnimationPackage" width="324" height="94" style="border:0"/></a></p>
</div>
<div id="navigation">
  <p class="button">v2.00</p>
  <p class="button"><a href="index.htm">index</a></p>
  <p class="button"><a href="readme.htm">readme</a></p>
  <p class="button"><a href="support.htm">support</a></p>
  <p class="button"><a href="history.htm">history</a></p>
  <p class="button"><a href="license.htm">terms of use</a></p>
  <p class="button"><a href="download.htm">download</a></p>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<p><input type="hidden" name="cmd" value="_s-xclick" /></p>
<p><input type="image" src="https://www.paypal.com/en_US/i/btn/x-click-but21.gif" style="border:0" name="submit" alt="Make payments with PayPal - it's fast, free and secure!" /></p>
<p><input type="hidden" name="encrypted" value="-----BEGIN PKCS7-----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-----END PKCS7-----
" /></p>
</form>
  <p><a href="http://sourceforge.net"><img src="http://sourceforge.net/sflogo.php?group_id=116992&amp;type=1" width="88" height="31" alt="SourceForge.net Logo" style="border:0" /></a></p>
  <p><a href="http://validator.w3.org/check/referer"><img src="http://www.w3.org/Icons/valid-xhtml10" alt="Valid XHTML 1.0!" height="31" width="88" style="border:0" /></a></p>
  <p><a href="http://jigsaw.w3.org/css-validator/"><img src="http://jigsaw.w3.org/css-validator/images/vcss" alt="Valid CSS!" style="border:0;width:88px;height:31px" /></a></p>
  <p><a href="http://www.mtasc.org"><img src="http://www.mtasc.org/img/mtasc_88x31.gif" alt="Compiled with MTASC" style="border:0"/></a></p>
</div>
<div id="content">   
  <p>&nbsp; </p>
  <p class="heading">Step by Step Tutorial </p>
  <p class="main_txt">Create a new Flash document, save it in your project folder that contains the needed packages for AnimationPackage (all supplied folders except &quot;docs&quot;). Write</p>
  <p class="main_txt"><br/>
  </p>
  <blockquote>
    <pre class="code">import de.alex_uhlmann.animationpackage.*;<br />import de.alex_uhlmann.animationpackage.animation.*;<br />import de.alex_uhlmann.animationpackage.drawing.*;<br />import de.alex_uhlmann.animationpackage.utility.*;<br />import com.robertpenner.easing.*;

APCore.initialize();

  </pre>
  </blockquote>
  <p class="main_txt"> Let's get it on: </p>
  <p class="main_txt">&nbsp;</p>
  <p>&nbsp;</p>
  <p class="main_txt">Let's draw half of a wedge.</p>
  <p class="main_txt">&nbsp; </p>
  <blockquote>
    <pre class="code">

var myArc:Arc = new Arc();
myArc.setArcType(&quot;PIE&quot;);
myArc.setEndValue(180);
myArc.draw();



  </pre>
  </blockquote>
  <p class="main_txt"><span>By default our wedge is positioned at the upper left corner at 0,0. Let's do the same, just position it better, so we can better see it.</span></p>
  <p class="main_txt">&nbsp; </p>
  <blockquote>
    <pre class="code">

var myArc:Arc = new Arc(100,100);
myArc.setArcType(&quot;PIE&quot;);
myArc.setEndValue(180);
myArc.draw();

  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt">Modify the outline. Remember the lineStyle() method of MovieClip? It's just the same:<br/>
  </p>
  <p class="main_txt">&nbsp; </p>
  <blockquote>
    <pre class="code">

var myArc:Arc = new Arc(100,100);
myArc.setArcType(&quot;PIE&quot;);
myArc.setEndValue(180);
myArc.lineStyle(15,0xff0000,50);
myArc.draw();

  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt">Our wedge has a black fill by default, so let's change that. Color it red:<br/>
  </p>
  <p class="main_txt">&nbsp; </p>
  <blockquote>
    <pre class="code">

var myArc:Arc = new Arc(100,100);
myArc.setArcType(&quot;PIE&quot;);
myArc.setEndValue(180);
myArc.lineStyle(15,0xff0000,50);
myArc.fillStyle(0xff0000,100);
myArc.draw();

  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt">You could have omitted the second parameter of fillStyle(), since this is the _alpha property and it defaults to 100 anyway.</p>
  <p class="main_txt">So, where is the animation, you ask? Just change draw() to animate() and specify the start and end value in percentage.</p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

var myArc:Arc = new Arc(100,100);
myArc.setArcType(&quot;PIE&quot;);
myArc.setEndValue(180);
myArc.lineStyle(15,0xff0000,50);
myArc.fillStyle(0xff0000);
myArc.animate(0,100);

</pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>You can modify the animation with animationStyle().</span></p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

var myArc:Arc = new Arc(100,100);
myArc.setArcType(&quot;PIE&quot;);
myArc.setEndValue(180);
myArc.lineStyle(15,0xff0000,50);
myArc.fillStyle(0xff0000);
myArc.animationStyle(2000,Circ.easeInOut);
myArc.animate(0,100);</pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>Now, we want to do something after the animation. </span><span>For this, we can either use callbacks or Macromedia's EventDispatcher / Grant Skinner's GDispatcher. In this example I'll show how to use callbacks. Take a look into the readme to know more about the latter approaches. </span></p>
  <p class="main_txt"><span>First, we have to create a listener object...</span></p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">var myListener:Object = new Object();</pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>and subscribe the listener object to all events from AnimationPackage. The APCore class handles the subscription.</span></p>
  <p>&nbsp;</p>
  <blockquote>
    <pre class="code">

APCore.addListener(myListener);</pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>We can add a callback parameter as the third parameter to animationStyle. Later, we will define a function to our myListener object with the same name as the callback parameter. For now, our code looks like this:</span></p>
  <p>&nbsp;</p>
  <blockquote>
    <pre class="code">


var myListener:Object = new Object();
APCore.addListener(myListener);


var myArc:Arc = new Arc(100,100);
myArc.setArcType(&quot;PIE&quot;);
myArc.setEndValue(180);
myArc.lineStyle(15,0xff0000,50);
myArc.fillStyle(0xff0000);
myArc.animationStyle(2000,Circ.easeInOut,"onFirstAnimation");
myArc.animate(0,100);
var mc:MovieClip = myArc.movieclip;
  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt">Note that we have also saved the movieclip property of myArc in the variable mc. This is the movieclip that contains the wedge. We might need it for later animations.</p>
  <p class="main_txt">Here is the new function we define on the myListener object to be called after our wedge animation is done.</p>
  <p>&nbsp;</p>
  <blockquote>
    <pre class="code">

myListener.onFirstAnimation = function(source, value) { 
	trace(source+" just completed at "+value); 
	//do stuff
}

  </pre>
</blockquote>
  <p class="main_txt"><span>Because of the animationStyle() invocation, our myArc instance knows a callback property of "onFirstAnimation". We don't want to call the onFirstAnimation() again, so inside onFirstAnimation(), let's just change the callback property to the next function to be called.</span></p>
  <p>&nbsp;</p>
  <blockquote>
    <pre class="code">

myArc.callback = "onSecondAnimation";

  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt">All other animationStyle properties stay the same. In onFirstAnimation() we want our wedge animation to continue to 300 degrees.</p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">
myListener.onFirstAnimation = function(source, value) { 
	trace(source+" just completed at "+value); 
	myArc.callback = "onSecondAnimation"; 
	myArc.setEndValue(300);<br />	myArc.animate(myArc.getCurrentPercentage(),100);
}</pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>Inside our next function, move the wedge to the center of the screen.</span></p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">
myListener.onSecondAnimation = function(source, value) {     
	trace(source+" just completed at "+value);       
	new Move(mc).run(275,200,500,"onCentered");        
}
  </pre>
    <p>&nbsp;</p>
  </blockquote>
  <p class="main_txt"><span>Note, that most functions in AnimationPackage offer you flexiblility how to use them. See the specific class documentation HTML file for more details. Above, I have used the Move class in just one line. We could also use the animationStyle() method like we did for the wedge animation...</span></p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

var myMove:Move = new Move(mc);
myMove.animationStyle(500,"onCentered")
myMove.run(275,200);
  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>...or could have set the animationStyle properties one by one:</span></p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

var myMove:Move = new Move(mc);
myMove.duration = 500;
myMove.callback = "onCentered";
myMove.run(275,200);

</pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>...or like this:</span></p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

var myMove:Move = new Move(mc);
myMove.animationStyle(500,"onCentered");
myMove.setStartValues([mc._x,mc._y]);
myMove.setEndValues([275,200]);
myMove.run();


</pre>
  </blockquote>
  <p class="main_txt">You can also send the parameters of the calling function with the constructor and use the animate() method with its percentage properties that specify to what extent you want the animation to take place or to reverse the animation. This is especially useful if you use the Parallel, Sequence, Animation or Drawer class of AnimationPackage. Take a look at their class documentations for more information.</p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

var myMove:Move = new Move(mc,275,200,500);
myMove.animate(0,100);
  </pre>
    <p>&nbsp;</p>
  </blockquote>
  <p></p>
  <p class="main_txt">btw. you could also change the tween-engine that AnimationPackage uses internally. With</p>
  <p>&nbsp;</p>
  <p><span class="code">AnimationCore.setTweenMode("FRAMES");</span></p>
  <p>&nbsp;</p>
  <p>you can use frame-based tweening instead of time-based tweening. Take a look at class documentations, especially from APCore, AnimationCore and the readme.htm for more information.</p>
  <p class="main_txt">&nbsp;</p>
  <p class="main_txt">Note, that we didn't specify the easing property. If we don't specify a property, the default property is used. You can make use of this if you have i.e. different classes that might want to share some properties. Then, you can overwrite the default property and don't specify anything to the instance, so that the instance retrieves your default property. All default properties belong to a class (they are static) and have the same name like their instance properties except for the suffix &quot;_def&quot; for default. i.e. if you want all your classes to move according to the Elastic.easeOut easing equation do this:</p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

AnimationCore.easing_def = Elastic.easeOut;

  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt">Now, if some class does need another easing equation, just override the default property with animationStyle(), the method or directly on the animationStyle property.</p>
  <p class="main_txt">To know what default properties are available and what values they have by default, take a look at the documentation for the specific class you are using. If you can't find the property you are looking for, make sure you've checked the AnimationCore or Shape class documentation.</p>
  <p class="main_txt">Now, let's return to our animation:</p>
  <p class="main_txt">So, whatever move you used to center the wedge, after this animation the onCentered() function should be called. Inside onCentered() use Bounce easing to drop the wedge to the bottom of the screen.</p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">

myListener.onCentered = function(source, value) {      
	trace(source+" just completed at coordinates "+value);
	var myMove:Move = new Move(mc);
	myMove.animationStyle(4000,Bounce.easeOut,"onDrop");
	myMove.run(275,300);
}
  </pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt">In onDrop() use the Move and Rotation class to simulate that your wedge is rolling off the screen. </p>
  <p class="main_txt">&nbsp;</p>
  <blockquote>
    <pre class="code">
myListener.onDrop = function(source, value) {            
	trace(source+" just completed at coordinates "+value);
	AnimationCore.duration_def = 3000;
	AnimationCore.easing_def = Quad.easeIn;     
	new Rotation(mc).run(360);
	new Move(mc).run(675,mc._y);
}</pre>
  </blockquote>
  <p>&nbsp;</p>
  <p class="main_txt"><span>And here is all the code:</span></p>
  <blockquote>
    <pre class="code">import de.alex_uhlmann.animationpackage.*;<br />import de.alex_uhlmann.animationpackage.animation.*;<br />import de.alex_uhlmann.animationpackage.drawing.*;<br />import de.alex_uhlmann.animationpackage.utility.*;<br />import com.robertpenner.easing.*;

APCore.initialize();
var myListener:Object = new Object();
APCore.addListener(myListener);

var myArc:Arc = new Arc(100,100);<br />myArc.setArcType(&quot;PIE&quot;);<br />myArc.setEndValue(180);<br />myArc.lineStyle(15,0xff0000,50);<br />myArc.fillStyle(0xff0000);<br />myArc.animationStyle(2000,Circ.easeInOut,&quot;onFirstAnimation&quot;);<br />myArc.animate(0,100);<br />var mc:MovieClip = myArc.movieclip;

myListener.onFirstAnimation = function(source, value) { <br />	trace(source+&quot; just completed at &quot;+value); <br />	myArc.callback = &quot;onSecondAnimation&quot;; <br />	myArc.setEndValue(300);<br />	myArc.animate(myArc.getCurrentPercentage(),100);<br />}
myListener.onSecondAnimation = function(source, value) {     <br />	trace(source+&quot; just completed at &quot;+value);       <br />	new Move(mc).run(275,200,500,&quot;onCentered&quot;);        <br />}<br />myListener.onCentered = function(source, value) {      <br />	trace(source+&quot; just completed at coordinates &quot;+value);<br />	var myMove:Move = new Move(mc);<br />	myMove.animationStyle(4000,Bounce.easeOut,&quot;onDrop&quot;);<br />	myMove.run(275,300);<br />}
myListener.onDrop = function(source, value) {            <br />	trace(source+&quot; just completed at coordinates &quot;+value);<br />	AnimationCore.duration_def = 3000;<br />	AnimationCore.easing_def = Quad.easeIn;     <br />	new Rotation(mc).run(360);<br />	new Move(mc).run(675,mc._y);<br />}</pre>
</blockquote>
  <p>and the resulting <span class="link"><a href="tutorial_sample.html">.swf file</a></span>.</p>
  <p>&nbsp;</p>
  <p>Thanks for following me. Have a better example? Found bugs? Let me know. <span class="link"><a
href="mailto:mailX@XalexX-uhlmann.de">mailX@XalexX-uhlmann.de</a></span> . Remove the X's.</p>
</div>

<div id="script">
  <p>creating powerful animations fast.</p>
</div>

</body>
</html>
