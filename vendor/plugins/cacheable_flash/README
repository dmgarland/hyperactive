CacheableFlash
==============

== Installation
ruby script/plugin install svn://rubyforge.org/var/svn/pivotalrb/cacheable_flash/trunk

== Description

This plugin enables greater levels of page caching by rendering flash
messages from a cookie using JavaScript, instead of in your Rails
view template.  Flash contents are converted to JSON and placed in
a cookie by an after_filter in a controller.

=== Usage

To use, include the CacheableFlash module in your controller.
It's all or none on the actions in your controller, so you can't
mix JS and HTML display of your flash message in a controller.
No other modifications to the controller are needed.  You will need
to add divs and some javascript to your view or layout templates
to render the flash in the browser.

Note that the cookie holding the flash messages is removed as the
page is displayed, so a refresh will clear the flash message (just
as happens normally).

=== Example Controller

class MyController < ActionController::Base
  include CacheableFlash
  # ...
end

=== Example Template Markup

  <div id="error_div_id" class="flash flash_error"></div>
  <div id="notice_div_id" class="flash flash_notice"></div>
  <script type="text/javascript">
    Flash.transferFromCookies();
    Flash.writeDataTo('error', $('error_div_id'));
    Flash.writeDataTo('notice', $('notice_div_id'));
  </script>

== Testing
You can test your flash cookies by making assertions on the json of the "flash" cookie.
Cacheable Flash provides test helpers which includes the flash_cookie method.

=== Test::Unit Example
  require "cacheable_flash/test_helpers"

  class TestController < ActionController::Base
    def index
      flash["notice"] = "In index"
    end
  end

  class ControllerTest < Test::Unit::TestCase
    include CacheableFlash::TestHelpers

    def setup
      @controller = TestController.new
      @request = ActionController::TestRequest.new
      @response = ActionController::TestResponse.new
    end

    def test_cacheable_flash_action
      get :index
      asset_equal "In index", flash_cookie["notice"]
    end
  end

=== Rspec Example
  require "cacheable_flash/test_helpers"

  class TestController < ActionController::Base
    def index
      flash["notice"] = "In index"
    end
  end

  describe TestController, "#index" do
    include CacheableFlash::TestHelpers
    
    it "writes to the flash cookie" do
      get :index
      flash_cookie["notice"].should == "In index"
    end
  end

== Copyright
MIT License
Copyright (c) 2007 Pivotal Labs

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.